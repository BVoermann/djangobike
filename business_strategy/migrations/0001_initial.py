# Generated by Django 4.2.11 on 2025-09-23 07:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bikeshop', '0004_auto_20250918_1034'),
        ('sales', '0002_market_monthly_volume_capacity_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SustainabilityProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sustainability_score', models.FloatField(default=50.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('eco_certification_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('sustainable_materials_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('recycled_materials_usage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('local_supplier_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('renewable_energy_usage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('waste_reduction_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('carbon_footprint_reduction', models.FloatField(default=0.0)),
                ('eco_customer_appeal', models.FloatField(default=0.0)),
                ('premium_eco_pricing', models.FloatField(default=0.0)),
                ('brand_reputation_bonus', models.FloatField(default=0.0)),
                ('sustainability_investment_monthly', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('compliance_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
        ),
        migrations.CreateModel(
            name='SustainabilityInitiative',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('initiative_type', models.CharField(choices=[('renewable_energy', 'Renewable Energy Installation'), ('waste_reduction', 'Waste Reduction Program'), ('sustainable_materials', 'Sustainable Materials Sourcing'), ('local_sourcing', 'Local Supplier Development'), ('carbon_offset', 'Carbon Offset Programs'), ('certification', 'Environmental Certification'), ('employee_training', 'Sustainability Training'), ('packaging', 'Sustainable Packaging'), ('transport_optimization', 'Green Transportation'), ('facility_upgrade', 'Green Facility Upgrades')], max_length=30)),
                ('description', models.TextField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('invested_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('monthly_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('implementation_months', models.IntegerField()),
                ('months_remaining', models.IntegerField()),
                ('start_month', models.IntegerField(blank=True, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('completion_month', models.IntegerField(blank=True, null=True)),
                ('completion_year', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('sustainability_score_bonus', models.FloatField(default=0.0)),
                ('renewable_energy_bonus', models.FloatField(default=0.0)),
                ('waste_reduction_bonus', models.FloatField(default=0.0)),
                ('sustainable_materials_bonus', models.FloatField(default=0.0)),
                ('local_sourcing_bonus', models.FloatField(default=0.0)),
                ('certification_level_bonus', models.IntegerField(default=0)),
                ('requires_ongoing_investment', models.BooleanField(default=False)),
                ('penalty_if_neglected', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
                ('sustainability_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiatives', to='business_strategy.sustainabilityprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('project_type', models.CharField(choices=[('efficiency', 'Production Efficiency'), ('quality', 'Quality Improvement'), ('sustainability', 'Sustainability Innovation'), ('new_component', 'New Component Development'), ('cost_reduction', 'Cost Reduction'), ('automation', 'Automation Technology'), ('materials', 'Advanced Materials'), ('design', 'Design Innovation')], max_length=20)),
                ('description', models.TextField()),
                ('total_investment_required', models.DecimalField(decimal_places=2, max_digits=12)),
                ('invested_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('monthly_investment', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('duration_months', models.IntegerField()),
                ('months_remaining', models.IntegerField()),
                ('start_month', models.IntegerField(blank=True, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('completion_month', models.IntegerField(blank=True, null=True)),
                ('completion_year', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('production_efficiency_bonus', models.FloatField(default=0.0)),
                ('quality_bonus', models.FloatField(default=0.0)),
                ('cost_reduction_bonus', models.FloatField(default=0.0)),
                ('sustainability_bonus', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
                ('target_bike_types', models.ManyToManyField(blank=True, to='bikeshop.biketype')),
                ('target_components', models.ManyToManyField(blank=True, to='bikeshop.component')),
            ],
        ),
        migrations.CreateModel(
            name='ResearchBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_efficiency_bonus', models.FloatField(default=0.0)),
                ('quality_bonus', models.FloatField(default=0.0)),
                ('cost_reduction_bonus', models.FloatField(default=0.0)),
                ('sustainability_bonus', models.FloatField(default=0.0)),
                ('activation_month', models.IntegerField()),
                ('activation_year', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('research_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business_strategy.researchproject')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
        ),
        migrations.CreateModel(
            name='MarketingCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('brand_awareness', 'Brand Awareness'), ('product_launch', 'Product Launch'), ('seasonal', 'Seasonal Campaign'), ('sustainability', 'Sustainability Marketing'), ('social_media', 'Social Media Campaign'), ('traditional', 'Traditional Advertising'), ('influencer', 'Influencer Marketing'), ('event_sponsorship', 'Event Sponsorship')], max_length=20)),
                ('target_segment', models.CharField(choices=[('all', 'All Segments'), ('cheap', 'Budget Segment'), ('standard', 'Standard Segment'), ('premium', 'Premium Segment'), ('eco_conscious', 'Eco-Conscious Customers'), ('performance', 'Performance Enthusiasts'), ('urban', 'Urban Commuters'), ('recreational', 'Recreational Riders')], max_length=20)),
                ('description', models.TextField()),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('monthly_spend', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('duration_months', models.IntegerField()),
                ('months_remaining', models.IntegerField()),
                ('start_month', models.IntegerField(blank=True, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('end_month', models.IntegerField(blank=True, null=True)),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('immediate_demand_boost', models.FloatField(default=0.0)),
                ('brand_awareness_boost', models.FloatField(default=0.0)),
                ('customer_loyalty_bonus', models.FloatField(default=0.0)),
                ('price_premium_tolerance', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
                ('target_bike_types', models.ManyToManyField(blank=True, to='bikeshop.biketype')),
                ('target_markets', models.ManyToManyField(blank=True, to='sales.market')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rd_focus_percentage', models.FloatField(default=25.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('marketing_focus_percentage', models.FloatField(default=25.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sustainability_focus_percentage', models.FloatField(default=25.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('operational_focus_percentage', models.FloatField(default=25.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rd_monthly_budget', models.DecimalField(decimal_places=2, default=5000, max_digits=10)),
                ('marketing_monthly_budget', models.DecimalField(decimal_places=2, default=5000, max_digits=10)),
                ('sustainability_monthly_budget', models.DecimalField(decimal_places=2, default=2000, max_digits=10)),
                ('total_rd_investment', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_marketing_investment', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_sustainability_investment', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('innovation_advantage', models.FloatField(default=0.0)),
                ('brand_strength', models.FloatField(default=0.0)),
                ('sustainability_reputation', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_share_estimate', models.FloatField(default=10.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('brand_recognition_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('customer_satisfaction_score', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('price_competitiveness', models.FloatField(default=0.0)),
                ('quality_competitiveness', models.FloatField(default=0.0)),
                ('innovation_competitiveness', models.FloatField(default=0.0)),
                ('sustainability_competitiveness', models.FloatField(default=0.0)),
                ('competitor_rd_activity', models.FloatField(default=50.0)),
                ('competitor_marketing_intensity', models.FloatField(default=50.0)),
                ('market_sustainability_trend', models.FloatField(default=50.0)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
            options={
                'unique_together': {('session', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='CampaignEffect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demand_boost', models.FloatField(default=0.0)),
                ('brand_awareness_boost', models.FloatField(default=0.0)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business_strategy.marketingcampaign')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
            options={
                'unique_together': {('session', 'campaign', 'month', 'year')},
            },
        ),
    ]
