# Generated by Django 4.2.11 on 2025-09-17 08:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sales', '0001_initial'),
        ('bikeshop', '0002_transportcost'),
    ]

    operations = [
        migrations.CreateModel(
            name='AICompetitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('strategy', models.CharField(choices=[('cheap_only', 'Billig-Strategie'), ('balanced', 'Ausgewogene Strategie'), ('premium_focus', 'Premium-Fokus'), ('e_bike_specialist', 'E-Bike Spezialist')], max_length=20)),
                ('financial_resources', models.DecimalField(decimal_places=2, default=50000.0, max_digits=12)),
                ('market_presence', models.FloatField(default=15.0)),
                ('aggressiveness', models.FloatField(default=0.5)),
                ('efficiency', models.FloatField(default=0.7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_bikes_produced', models.IntegerField(default=0)),
                ('total_bikes_sold', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitorSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_segment', models.CharField(choices=[('cheap', 'Günstig'), ('standard', 'Standard'), ('premium', 'Premium')], max_length=20)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('quantity_offered', models.IntegerField()),
                ('quantity_sold', models.IntegerField(default=0)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bike_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.biketype')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitors.aicompetitor')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.market')),
            ],
        ),
        migrations.CreateModel(
            name='MarketCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_segment', models.CharField(choices=[('cheap', 'Günstig'), ('standard', 'Standard'), ('premium', 'Premium')], max_length=20)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('total_supply', models.IntegerField(default=0)),
                ('estimated_demand', models.IntegerField(default=0)),
                ('saturation_level', models.FloatField(default=0.0)),
                ('average_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('price_pressure', models.FloatField(default=0.0)),
                ('bike_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.biketype')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.market')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.gamesession')),
            ],
            options={
                'unique_together': {('session', 'market', 'bike_type', 'price_segment', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='CompetitorProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_segment', models.CharField(choices=[('cheap', 'Günstig'), ('standard', 'Standard'), ('premium', 'Premium')], max_length=20)),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('quantity_planned', models.IntegerField()),
                ('quantity_produced', models.IntegerField(default=0)),
                ('production_cost_per_unit', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bike_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bikeshop.biketype')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitors.aicompetitor')),
            ],
            options={
                'unique_together': {('competitor', 'bike_type', 'price_segment', 'month', 'year')},
            },
        ),
    ]
