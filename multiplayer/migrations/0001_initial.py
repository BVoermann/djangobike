# Generated by Django 4.2.11 on 2025-09-22 11:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MultiplayerGame',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('max_players', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(10)])),
                ('human_players_count', models.IntegerField(default=1)),
                ('ai_players_count', models.IntegerField(default=5)),
                ('current_month', models.IntegerField(default=1)),
                ('current_year', models.IntegerField(default=2024)),
                ('max_months', models.IntegerField(default=60)),
                ('turn_deadline_hours', models.IntegerField(default=24)),
                ('status', models.CharField(choices=[('setup', 'Setup'), ('waiting', 'Waiting for Players'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='setup', max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], default='medium', max_length=10)),
                ('allow_bankruptcy', models.BooleanField(default=True)),
                ('bankruptcy_threshold', models.DecimalField(decimal_places=2, default=-50000.0, max_digits=12)),
                ('starting_balance', models.DecimalField(decimal_places=2, default=80000.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('enable_real_time_updates', models.BooleanField(default=True)),
                ('enable_player_chat', models.BooleanField(default=True)),
                ('enable_market_intelligence', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlayerSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('player_type', models.CharField(choices=[('human', 'Human Player'), ('ai', 'AI Player')], max_length=10)),
                ('ai_strategy', models.CharField(blank=True, choices=[('cheap_only', 'Cost Leader'), ('balanced', 'Balanced'), ('premium_focus', 'Premium Focus'), ('e_bike_specialist', 'E-Bike Specialist'), ('innovative', 'Innovation Leader'), ('aggressive', 'Aggressive Competitor')], max_length=20, null=True)),
                ('balance', models.DecimalField(decimal_places=2, default=80000.0, max_digits=12)),
                ('is_bankrupt', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bankruptcy_month', models.IntegerField(blank=True, null=True)),
                ('bankruptcy_year', models.IntegerField(blank=True, null=True)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('bikes_produced', models.IntegerField(default=0)),
                ('bikes_sold', models.IntegerField(default=0)),
                ('market_share', models.FloatField(default=0.0)),
                ('ai_difficulty', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2.0)])),
                ('ai_aggressiveness', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('ai_risk_tolerance', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('multiplayer_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='multiplayer.multiplayergame')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['joined_at'],
                'unique_together': {('multiplayer_game', 'user')},
            },
        ),
        migrations.CreateModel(
            name='PlayerCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('chat', 'Chat Message'), ('trade_offer', 'Trade Offer'), ('alliance_request', 'Alliance Request'), ('system_notification', 'System Notification')], default='chat', max_length=20)),
                ('content', models.TextField()),
                ('data', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('multiplayer_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multiplayer.multiplayergame')),
                ('recipients', models.ManyToManyField(blank=True, related_name='received_messages', to='multiplayer.playersession')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='multiplayer.playersession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('game_started', 'Game Started'), ('turn_processed', 'Turn Processed'), ('player_joined', 'Player Joined'), ('player_left', 'Player Left'), ('player_bankruptcy', 'Player Bankruptcy'), ('market_event', 'Market Event'), ('ai_action', 'AI Action'), ('system_message', 'System Message'), ('player_message', 'Player Message'), ('game_ended', 'Game Ended')], max_length=30)),
                ('message', models.TextField()),
                ('data', models.JSONField(default=dict)),
                ('visible_to_all', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to='multiplayer.playersession')),
                ('multiplayer_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multiplayer.multiplayergame')),
                ('visible_to', models.ManyToManyField(blank=True, related_name='visible_events', to='multiplayer.playersession')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TurnState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('decisions_submitted', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('auto_submitted', models.BooleanField(default=False)),
                ('production_decisions', models.JSONField(default=dict)),
                ('procurement_decisions', models.JSONField(default=dict)),
                ('sales_decisions', models.JSONField(default=dict)),
                ('hr_decisions', models.JSONField(default=dict)),
                ('finance_decisions', models.JSONField(default=dict)),
                ('revenue_this_turn', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('profit_this_turn', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bikes_produced_this_turn', models.IntegerField(default=0)),
                ('bikes_sold_this_turn', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('multiplayer_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multiplayer.multiplayergame')),
                ('player_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multiplayer.playersession')),
            ],
            options={
                'ordering': ['-year', '-month', 'player_session'],
                'unique_together': {('multiplayer_game', 'player_session', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='MultiplayerGameInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('multiplayer_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multiplayer.multiplayergame')),
            ],
            options={
                'unique_together': {('multiplayer_game', 'invited_user')},
            },
        ),
    ]
